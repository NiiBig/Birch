version: 2.1

orbs:
  codecov: codecov/codecov@1.1.1
  slack: circleci/slack@3.4.2

executors:
  test:
    docker:
      - image: lawmurray/birch-circleci:opensuse-tumbleweed

commands:
  environment:
    description: Preparing more environment variables
    steps:
      - run:
          name: Git check
          description: Fail if not a git repository
          command: git describe
            # ensures failure if git describe to find version number fails below
      - run:
          name: Environment
          description: Set environment variables for builds
          command: |
              echo "export PREFIX=/root/project" >> $BASH_ENV
              echo "export PATH=\$PREFIX/bin:$PATH" >> $BASH_ENV
              echo "export CPLUS_INCLUDE_PATH=\$PREFIX/include:$CPLUS_INCLUDE_PATH" >> $BASH_ENV
              echo "export LD_LIBRARY_PATH=\$PREFIX/lib:$LD_LIBRARY_PATH" >> $BASH_ENV
              echo "export OMP_NUM_THREADS=2" >> $BASH_ENV
              echo "export BIRCH_FLAGS='--unit=dir --jobs=2'" >> $BASH_ENV
              echo "export CONFIGURE_FLAGS='--disable-debug --enable-test --enable-release'" >> $BASH_ENV
              echo "export VERSION=`git describe | sed -E 's/v([0-9]+)-([0-9]+)-g[0-9a-f]+/\1.\2/'`" >> $BASH_ENV
              echo "export OSC=/root/project/osc/home:lawmurray:birch" >> $BASH_ENV
            # limited to two parallel jobs to avoid exhausting memory

  slack:
    description: Send Slack message on failure
    steps:
      - slack/status:
         fail_only: true

  driver:
    description: Build the driver
    steps:
      - checkout
      - environment
      - run:
          name: Build
          command: |
              cd driver
              ./bootstrap
              ./configure --prefix=$PREFIX CXXFLAGS="-Wall -Wno-overloaded-virtual -g -O0 -fno-inline -fprofile-abs-path --coverage"
              make -j 4
              make install
      - slack
      - persist_to_workspace:
          root: .
          paths:
            - '*'
            - .*

  cxx:
    description: Build a C++ library
    parameters:
      package:
        description: Name of the library
        type: string
    steps:
      - attach_workspace:
          at: .
      - environment
      - run:
          name: Build C++ library
          command: |
              cd << parameters.package >>
              ./bootstrap
              ./configure --prefix=$PREFIX $CONFIGURE_FLAGS
              make -j 4
              make install
      - slack
      - persist_to_workspace:
          root: .
          paths:
            - << parameters.package >>
            - lib/<< parameters.package >>*
            - include/<< parameters.package >>*
    
  library:
    description: Build a Birch library package and optionally run tests
    parameters:
      package:
        description: Name of package (e.g. Standard).
        type: string
      tar:
        description: Tarname of package (e.g. birch-standard).
        type: string
      smoke:
        description: Run smoke tests?
        type: boolean
        default: false
      unit:
        description: Run unit tests?
        type: boolean
        default: false
    steps:
      - attach_workspace:
          at: .
      - environment
      - run:
          name: Build
          command: |
              cd libraries/<< parameters.package >>
              birch build --prefix=$PREFIX $CONFIGURE_FLAGS $BIRCH_FLAGS
              birch install
      - when:
          condition: << parameters.smoke >>
          steps:
            - run:
                name: Run smoke tests
                command: |
                    cd libraries/<< parameters.package >>
                    export BIRCH_MODE=test
                    ./smoke.sh
      - when:
          condition: << parameters.unit >>
          steps:
            - run:
                name: Run unit tests
                command: |
                    cd libraries/<< parameters.package >>
                    export BIRCH_MODE=release
                    ./test.sh
      - slack
      - codecov/upload
      - persist_to_workspace:
          root: .
          paths:
            - libraries/<< parameters.package >>
            - lib/lib<< parameters.tar >>*
            - include/<< parameters.tar >>*
            
  example:
    description: Build a Birch example package and optionally run tests
    parameters:
      package:
        description: Name of package (e.g. LinearGaussian)
        type: string
      smoke:
        description: Run smoke tests?
        type: boolean
        default: false
      unit:
        description: Run unit tests?
        type: boolean
        default: false
      mongodb:
        description: Upload unit test output to MongoDB Atlas?
        type: boolean
        default: false
    steps:
      - attach_workspace:
          at: .
      - environment
      - run:
          name: Build
          command: |
              cd examples/<< parameters.package >>
              birch build --prefix=$PREFIX $CONFIGURE_FLAGS $BIRCH_FLAGS
      - when:
          condition: << parameters.smoke >>
          steps:
            - run:
                name: Run smoke tests
                command: |
                    cd examples/<< parameters.package >>
                    export BIRCH_MODE=test
                    ./smoke.sh
      - when:
          condition: << parameters.unit >>
          steps:
            - run:
                name: Run unit tests
                command: |
                    cd examples/<< parameters.package >>
                    export BIRCH_MODE=release
                    ./test.sh
      - slack
      - codecov/upload
      - when:
          condition: << parameters.mongodb >>
          steps:
            - run:
                name: MongoDB import
                command: |
                    cd examples/<< parameters.package >>
                    mongoimport --host $MONGODB_HOST --ssl --username $MONGODB_USERNAME --password $MONGODB_PASSWORD --authenticationDatabase admin --db $CIRCLE_BRANCH --collection << parameters.package >> --jsonArray --file output/*.json

  update_version:
    description: Update Linux package version number
    parameters:
      file:
        description: File name
        type: string
    steps:
      - run:
          name: Update version number in file
          command: |
            cat << parameters.file >> | 
            sed -E "s/Version: [0-9]+.[0-9]+/Version: $VERSION/g" |
            sed -E "s/pkgver=[0-9]+.[0-9]+/pkgver=$VERSION/g" |
            sed -E "s/>=( ?)[0-9]+.[0-9]+/>=\\1$VERSION/g" |
            sponge << parameters.file >>

  package_linux:
    description: Update Linux package
    parameters:
      dir:
        description: Directory of package (e.g. libraries/Standard).
        type: string
      tar:
        description: Tarname of package (e.g. birch-standard).
        type: string
    steps:
      - run:
          name: Prepare source tarball
          command: |
              cd << parameters.dir >>
              make dist
              mv << parameters.tar >>-unversioned.tar.gz $OSC/<< parameters.tar >>/.
      - update_version:
          file: $OSC/<< parameters.tar >>/<< parameters.tar >>.spec
      - update_version:
          file: $OSC/<< parameters.tar >>/<< parameters.tar >>.dsc
      - update_version:
          file: $OSC/<< parameters.tar >>/debian.control
      - update_version:
          file: $OSC/<< parameters.tar >>/PKGBUILD
      - run:
          name: Commit package
          command: |
            cd $OSC/<< parameters.tar >>
            osc commit -m "Updated to version $VERSION."
          
jobs:
  driver:
    executor: test
    steps:
      - driver

  libbirch:
    executor: test
    steps:
      - cxx:
          package: libbirch

  libraries_Standard:
    executor: test
    steps:
      - library:
          package: Standard
          tar: birch-standard
          smoke: true
          unit: true
          
  libraries_Cairo:
    executor: test
    steps:
      - library:
          package: Cairo
          tar: birch-cairo

  libraries_SQLite:
    executor: test
    steps:
      - library:
          package: SQLite
          tar: birch-sqlite

  examples_LinearGaussian:
    executor: test
    steps: 
      - example:
          package: LinearGaussian
          smoke: true
          unit: true
          mongodb: true

  examples_LinearRegression:
    executor: test
    steps: 
      - example:
          package: LinearRegression
          smoke: true
          unit: true
          mongodb: true

  examples_MixedGaussian:
    executor: test
    steps: 
      - example:
          package: MixedGaussian
          smoke: true
          unit: true
          mongodb: true

  examples_MultiObjectTracking:
    executor: test
    steps: 
      - example:
          package: MultiObjectTracking
          smoke: true
          unit: true
          mongodb: true

  examples_PoissonGaussian:
    executor: test
    steps: 
      - example:
          package: PoissonGaussian
          smoke: true
          unit: true
          mongodb: true

  examples_SIR:
    executor: test
    steps: 
      - example:
          package: SIR
          smoke: true
          unit: true
          mongodb: true

  examples_VectorBorneDisease:
    executor: test
    steps: 
      - example:
          package: VectorBorneDisease
          smoke: true
          unit: true
          mongodb: true

  deploy_linux:
    executor: test
    steps:
      - attach_workspace:
          at: .
      - environment
      - run:
          name: Configure OSC
          command: |
              mkdir -p /root/.config/osc
              echo [general]                          > /root/.config/osc/oscrc
              echo apiurl = https://api.opensuse.org >> /root/.config/osc/oscrc
              echo [https://api.opensuse.org]        >> /root/.config/osc/oscrc
              echo user = $OSC_USERNAME              >> /root/.config/osc/oscrc
              echo pass = $OSC_PASSWORD              >> /root/.config/osc/oscrc
      - run:
          name: Checkout package sources
          command: |
             mkdir osc
             cd osc
             osc checkout home:lawmurray:birch
      - package_linux:
          dir: driver
          tar: birch
      - package_linux:
          dir: libbirch
          tar: libbirch
      - package_linux:
          dir: libraries/Standard
          tar: birch-standard
      - package_linux:
          dir: libraries/Cairo
          tar: birch-cairo
      - package_linux:
          dir: libraries/SQLite
          tar: birch-sqlite
      - slack

workflows:
  version: 2
  test:
    jobs:
      - driver:
          context: lawmurray


      - libbirch:
          context: lawmurray
          requires:
            - driver

      - libraries_Standard:
          context: lawmurray
          requires:
            - libbirch

      - libraries_Cairo:
          context: lawmurray
          requires:
            - libraries_Standard

      - libraries_SQLite:
          context: lawmurray
          requires:
            - libraries_Standard
    
      - examples_LinearGaussian:
          context: lawmurray
          requires:
            - libraries_Cairo
            - libraries_SQLite

      - examples_LinearRegression:
          context: lawmurray
          requires:
            - libraries_Cairo
            - libraries_SQLite

      - examples_MixedGaussian:
          context: lawmurray
          requires:
            - libraries_Cairo
            - libraries_SQLite

      - examples_PoissonGaussian:
          context: lawmurray
          requires:
            - libraries_Cairo
            - libraries_SQLite

      - examples_SIR:
          context: lawmurray
          requires:
            - libraries_Cairo
            - libraries_SQLite

      - examples_MultiObjectTracking:
          context: lawmurray
          requires:
            - libraries_Cairo
            - libraries_SQLite
      
      - examples_VectorBorneDisease:
          context: lawmurray
          requires:
            - libraries_Cairo
            - libraries_SQLite

      - deploy_linux:
          context: lawmurray
          requires:
            - examples_LinearGaussian
            - examples_LinearRegression
            - examples_MixedGaussian
            - examples_PoissonGaussian
            - examples_SIR
            - examples_MultiObjectTracking
            - examples_VectorBorneDisease
