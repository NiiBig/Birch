version: 2.1

orbs:
  codecov: codecov/codecov@1.1.1
  slack: circleci/slack@3.4.2

executors:
  debug:
    docker:
      - image: lawmurray/birch-circleci:ubuntu-20.04
    environment:
      BIRCH_PREFIX: "/root/project"
      BIRCH_FLAGS: "--mode=test --unit=dir --jobs=2"

  release:
    docker:
      - image: lawmurray/birch-circleci:ubuntu-20.04
    environment:
      BIRCH_PREFIX: "/root/project"
      BIRCH_FLAGS: "--mode=release --unit=dir --jobs=2"

commands:
  environment:
    description: "Set environment variables."
    steps:
      - run:
          name: Environment
          command: |
              echo "export PATH=$BIRCH_PREFIX/bin:$PATH" >> $BASH_ENV
              echo "export CPATH=$BIRCH_PREFIX/include:$CPATH" >> $BASH_ENV
              echo "export LD_LIBRARY_PATH=$BIRCH_PREFIX/lib:$LD_LIBRARY_PATH" >> $BASH_ENV

  # send Slack message on failure
  slack:
    description: "Send Slack message on failure"
    steps:
      - slack/status:
         fail_only: true

  # build a library package; this builds the library and persists the
  # workspace to downstream jobs
  build:
    description: "Build library package."
    parameters:
      package:
        type: string
    steps:
      - environment
      - attach_workspace:
          at: /root/project
      - run:
          name: Build library
          command: cd << parameters.package >> && birch install $BIRCH_FLAGS
      - slack
      - persist_to_workspace:
          root: /root/project
          paths:
            - '*'
      - codecov/upload

  # build and run a library package; this builds the library and persists the
  # workspace to downstream jobs, then builds and runs the library's
  # associated test package (the artifacts of which do not need to be
  # persisted to downstream jobs)
  build_and_run_library:
    description: "Build and test a library package."
    parameters:
      package:
        type: string
      command:
        type: string
        default: ./test
    steps:
      - environment
      - attach_workspace:
          at: /root/project
      - run:
          name: Build library
          command: cd << parameters.package >> && birch install $BIRCH_FLAGS
      - slack
      - persist_to_workspace:
          root: /root/project
          paths:
            - '*'
      - run:
          name: Build test
          command: cd << parameters.package >>Test && birch install $BIRCH_FLAGS
      - slack
      - run:
          name: Run test
          command: cd << parameters.package >>Test && << parameters.command >>
      - slack
      - codecov/upload
        
  # build and run an example package
  build_and_run_example:
    description: "Build and test an example package."
    parameters:
      package:
        type: string
      command:
        type: string
        default: ./test
    steps:
      - environment
      - attach_workspace:
          at: /root/project
      - run:
          name: Build example
          command: cd << parameters.package >> && birch install $BIRCH_FLAGS
      - slack
      - run:
          name: Run example
          command: cd << parameters.package >> && << parameters.command >>
      - slack
      - codecov/upload

jobs:
  # driver
  driver:
    executor: debug
    steps:
      - checkout
      - run:
          name: Build
          command: |
              cd driver
              ./autogen.sh
              ./configure --prefix=$BIRCH_PREFIX --config-cache CXXFLAGS="-Wall -Wno-overloaded-virtual -g -O0 --coverage -fprofile-abs-path"
              make -j 4
              make install
      - slack
      - persist_to_workspace:
          root: /root/project
          paths:
            - '*'

  # libraries
  libraries_Cairo:
    executor: debug
    steps:
      - build:
          package: libraries/Cairo

  libraries_SQLite:
    executor: debug
    steps:
      - build:
          package: libraries/SQLite

  libraries_Standard:
    executor: debug
    steps:
      - build_and_run_library:
          package: libraries/Standard

  # examples
  examples_LinearGaussian:
    executor: debug
    steps: 
      - build_and_run_example:
          package: examples/LinearGaussian

  examples_LinearRegression:
    executor: debug
    steps: 
      - build_and_run_example:
          package: examples/LinearRegression

  examples_MixedGaussian:
    executor: debug
    steps: 
      - build_and_run_example:
          package: examples/MixedGaussian

  examples_MultiObjectTracking:
    executor: debug
    steps: 
      - build_and_run_example:
          package: examples/MultiObjectTracking

  examples_PoissonGaussian:
    executor: debug
    steps: 
      - build_and_run_example:
          package: examples/PoissonGaussian

  examples_SIR:
    executor: debug
    steps: 
      - build_and_run_example:
          package: examples/SIR

  examples_VectorBorneDisease:
    executor: debug
    steps: 
      - build_and_run_example:
          package: examples/VectorBorneDisease

workflows:
  version: 2
  test:
    jobs:
      - driver

      - libraries_Standard:
          requires:
            - driver

      - libraries_Cairo:
          requires:
            - libraries_Standard

      - libraries_SQLite:
          requires:
            - libraries_Standard
    
      - examples_LinearGaussian:
          requires:
            - libraries_Standard

      - examples_MixedGaussian:
          requires:
            - libraries_Standard

      - examples_PoissonGaussian:
          requires:
            - libraries_Standard

      - examples_SIR:
          requires:
            - libraries_Standard

      - examples_MultiObjectTracking:
          requires:
            - libraries_Standard
            - libraries_Cairo
      
      - examples_VectorBorneDisease:
          requires:
            - libraries_Standard
