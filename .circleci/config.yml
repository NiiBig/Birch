version: 2.1

orbs:
  codecov: codecov/codecov@1.1.1
  slack: circleci/slack@3.4.2

executors:
  # executors have limited memory, so it's necessary to reduce the thread
  # thread count for each of these to 2
  smoke:
    docker:
      - image: lawmurray/birch-circleci:ubuntu-20.04
    environment:
      BIRCH_PREFIX: "/root/project"
      BIRCH_FLAGS: "--unit=dir --jobs=2"
      BIRCH_MODE: "test"
      CONFIGURE_FLAGS: "--disable-debug --enable-test --disable-release"
      OMP_NUM_THREADS: "2"

  test:
    docker:
      - image: lawmurray/birch-circleci:ubuntu-20.04
    environment:
      BIRCH_PREFIX: "/root/project"
      BIRCH_FLAGS: "--unit=dir --jobs=2"
      BIRCH_MODE: "release"
      CONFIGURE_FLAGS: "--disable-debug --disable-test --enable-release"
      OMP_NUM_THREADS: "2"

commands:
  # set environment variables
  environment:
    description: "Set environment variables."
    steps:
      - run:
          name: Environment
          command: |
              echo "export PATH=$BIRCH_PREFIX/bin:$PATH" >> $BASH_ENV
              echo "export CPLUS_INCLUDE_PATH=$BIRCH_PREFIX/include:$CPLUS_INCLUDE_PATH" >> $BASH_ENV
              echo "export LD_LIBRARY_PATH=$BIRCH_PREFIX/lib:$LD_LIBRARY_PATH" >> $BASH_ENV

  # send Slack message on failure
  slack:
    description: "Send Slack message on failure"
    steps:
      - slack/status:
         fail_only: true

  # build the driver
  build_driver:
    description: "Build driver."
    steps:
      - run:
          name: Build
          command: |
              cd driver
              ./bootstrap
              ./configure --prefix=$BIRCH_PREFIX CXXFLAGS="-Wall -Wno-overloaded-virtual -g -O0 -fno-inline -fprofile-abs-path --coverage"
              make -j 4
              make install
      - persist_to_workspace:
          root: .
          paths:
            - '*'
      - slack

  # build a C++ library
  build_lib:
    description: "Build C++ library."
    parameters:
      lib:
        type: string
    steps:
      - environment
      - attach_workspace:
          at: .
      - run:
          name: Build C++ library
          command: |
              cd << parameters.lib >>
              ./bootstrap
              ./configure --prefix=$BIRCH_PREFIX $CONFIGURE_FLAGS
              make -j 4
              make install
      - persist_to_workspace:
          root: .
          paths:
            - << parameters.lib >>/**/*.gcno
            - lib/<< parameters.lib >>*.so*
            - include/<< parameters.lib >>*
      - slack

  # build a library package; this builds the library and persists the
  # workspace to downstream jobs
  build_library:
    description: "Build library package."
    parameters:
      package:
        type: string
      tar:
        type: string
      coverage:
        type: boolean
        default: false
    steps:
      - environment
      - attach_workspace:
          at: .
      - run:
          name: Build library
          command: cd libraries/<< parameters.package >> && birch build $BIRCH_FLAGS && birch install
      - persist_to_workspace:
          root: .
          paths:
            - libraries/<< parameters.package >>/**/*.gcno
            - libraries/<< parameters.package >>/**/*.cpp
            - libraries/<< parameters.package >>/**/*.hpp
            - libraries/<< parameters.package >>/**/*.bih
            - lib/libbirch-<< parameters.tar >>*.*
            - include/birch-<< parameters.tar >>.*
      - when:
          condition: << parameters.coverage >>
          steps:
            - codecov/upload
      - slack
    
  # build and run a library package; this builds the library and persists the
  # workspace to downstream jobs, then builds and runs the library's
  # associated test package (the artifacts of which do not need to be
  # persisted to downstream jobs)
  build_and_run_library:
    description: "Build and test a library package."
    parameters:
      package:
        type: string
      tar:
        type: string
      command:
        type: string
      coverage:
        type: boolean
        default: false
    steps:
      - environment
      - attach_workspace:
          at: .
      - run:
          name: Build library
          command: cd libraries/<< parameters.package >> && birch build $BIRCH_FLAGS && birch install
      - run:
          name: Build test
          command: cd libraries/<< parameters.package >>Test && birch build $BIRCH_FLAGS && birch install
      - run:
          name: Run test
          command: cd libraries/<< parameters.package >>Test && << parameters.command >>
      - persist_to_workspace:
          root: .
          paths:
            - libraries/<< parameters.package >>/**/*.gcno
            - libraries/<< parameters.package >>/**/*.cpp
            - libraries/<< parameters.package >>/**/*.hpp
            - libraries/<< parameters.package >>/**/*.bih
            - lib/libbirch-<< parameters.tar >>*.*
            - include/birch-<< parameters.tar >>.*
      - when:
          condition: << parameters.coverage >>
          steps:
            - codecov/upload
      - slack
            
  # build and run an example package
  build_and_run_example:
    description: "Build and test an example package."
    parameters:
      package:
        type: string
      tar:
        type: string
      command:
        type: string
      mongodb:
        type: boolean
        default: false
      coverage:
        type: boolean
        default: false
    steps:
      - environment
      - attach_workspace:
          at: .
      - run:
          name: Build example
          command: cd examples/<< parameters.package >> && birch build $BIRCH_FLAGS && birch install
      - run:
          name: Run example
          command: cd examples/<< parameters.package >> && << parameters.command >>
      - when:
          condition: << parameters.mongodb >>
          steps:
            - run:
                name: MongoDB import
                command: cd examples/<< parameters.package >> && mongoimport --host $MONGODB_HOST --ssl --username $MONGODB_USERNAME --password $MONGODB_PASSWORD --authenticationDatabase admin --db $CIRCLE_BRANCH --collection << parameters.package >> --jsonArray --file output/*.json
      - when:
          condition: << parameters.coverage >>
          steps:
            - codecov/upload
      - slack

jobs:
  # driver
  driver:
    executor: smoke
    steps:
      - checkout
      - build_driver

  # library smoke tests
  smoke_libbirch:
    executor: smoke
    steps:
      - build_lib:
          lib: libbirch

  smoke_libraries_Cairo:
    executor: smoke
    steps:
      - build_library:
          package: Cairo
          tar: cairo
          coverage: true

  smoke_libraries_SQLite:
    executor: smoke
    steps:
      - build_library:
          package: SQLite
          tar: sqlite
          coverage: true
  
  smoke_libraries_Standard:
    executor: smoke
    steps:
      - build_and_run_library:
          package: Standard
          tar: standard
          command: ./smoke.sh
          coverage: true

  # example smoke tests
  smoke_examples_LinearGaussian:
    executor: smoke
    steps: 
      - build_and_run_example:
          package: LinearGaussian
          tar: lineargaussian
          command: ./smoke.sh
          coverage: true

  smoke_examples_LinearRegression:
    executor: smoke
    steps: 
      - build_and_run_example:
          package: LinearRegression
          tar: linearregression
          command: ./smoke.sh
          coverage: true

  smoke_examples_MixedGaussian:
    executor: smoke
    steps: 
      - build_and_run_example:
          package: MixedGaussian
          tar: mixedgaussian
          command: ./smoke.sh
          coverage: true

  smoke_examples_MultiObjectTracking:
    executor: smoke
    steps: 
      - build_and_run_example:
          package: MultiObjectTracking
          tar: multiobjecttracking
          command: ./smoke.sh
          coverage: true

  smoke_examples_PoissonGaussian:
    executor: smoke
    steps: 
      - build_and_run_example:
          package: PoissonGaussian
          tar: poissongaussian
          command: ./smoke.sh
          coverage: true

  smoke_examples_SIR:
    executor: smoke
    steps: 
      - build_and_run_example:
          package: SIR
          tar: sir
          command: ./smoke.sh
          coverage: true

  smoke_examples_VectorBorneDisease:
    executor: smoke
    steps: 
      - build_and_run_example:
          package: VectorBorneDisease
          tar: vectorbornedisease
          command: ./smoke.sh
          coverage: true

  # library thorough tests
  test_libbirch:
    executor: test
    steps:
      - build_lib:
          lib: libbirch

  test_libraries_Cairo:
    executor: test
    steps:
      - build_library:
          package: Cairo
          tar: cairo

  test_libraries_SQLite:
    executor: test
    steps:
      - build_library:
          package: SQLite
          tar: sqlite

  test_libraries_Standard:
    executor: test
    steps:
      - build_and_run_library:
          package: Standard
          tar: standard
          command: ./test.sh

  # example thorough tests
  test_examples_LinearGaussian:
    executor: test
    steps: 
      - build_and_run_example:
          package: LinearGaussian
          tar: lineargaussian
          command: ./test.sh
          mongodb: true

  test_examples_LinearRegression:
    executor: test
    steps: 
      - build_and_run_example:
          package: LinearRegression
          tar: linearregression
          command: ./test.sh
          mongodb: true

  test_examples_MixedGaussian:
    executor: test
    steps: 
      - build_and_run_example:
          package: MixedGaussian
          tar: mixedgaussian
          command: ./test.sh
          mongodb: true

  test_examples_MultiObjectTracking:
    executor: test
    steps: 
      - build_and_run_example:
          package: MultiObjectTracking
          tar: multiobjecttracking
          command: ./test.sh
          mongodb: true

  test_examples_PoissonGaussian:
    executor: test
    steps: 
      - build_and_run_example:
          package: PoissonGaussian
          tar: poissongaussian
          command: ./test.sh
          mongodb: true

  test_examples_SIR:
    executor: test
    steps: 
      - build_and_run_example:
          package: SIR
          tar: sir
          command: ./test.sh
          mongodb: true

  test_examples_VectorBorneDisease:
    executor: test
    steps: 
      - build_and_run_example:
          package: VectorBorneDisease
          tar: vectorbornedisease
          command: ./test.sh
          mongodb: true

workflows:
  version: 2
  test:
    jobs:
      - driver:
          context: lawmurray

      - smoke_libbirch:
          context: lawmurray
          requires:
            - driver

      - smoke_libraries_Standard:
          context: lawmurray
          requires:
            - smoke_libbirch

      - smoke_libraries_Cairo:
          context: lawmurray
          requires:
            - smoke_libraries_Standard

      - smoke_libraries_SQLite:
          context: lawmurray
          requires:
            - smoke_libraries_Standard
    
      - smoke_examples_LinearGaussian:
          context: lawmurray
          requires:
            - smoke_libraries_Cairo
            - smoke_libraries_SQLite

      - smoke_examples_LinearRegression:
          context: lawmurray
          requires:
            - smoke_libraries_Cairo
            - smoke_libraries_SQLite

      - smoke_examples_MixedGaussian:
          context: lawmurray
          requires:
            - smoke_libraries_Cairo
            - smoke_libraries_SQLite

      - smoke_examples_PoissonGaussian:
          context: lawmurray
          requires:
            - smoke_libraries_Cairo
            - smoke_libraries_SQLite

      - smoke_examples_SIR:
          context: lawmurray
          requires:
            - smoke_libraries_Cairo
            - smoke_libraries_SQLite

      - smoke_examples_MultiObjectTracking:
          context: lawmurray
          requires:
            - smoke_libraries_Cairo
            - smoke_libraries_SQLite
      
      - smoke_examples_VectorBorneDisease:
          context: lawmurray
          requires:
            - smoke_libraries_Cairo
            - smoke_libraries_SQLite

      - test_libbirch:
          context: lawmurray
          requires:
            - smoke_examples_LinearGaussian
            - smoke_examples_LinearRegression
            - smoke_examples_MixedGaussian
            - smoke_examples_PoissonGaussian
            - smoke_examples_SIR
            - smoke_examples_MultiObjectTracking
            - smoke_examples_VectorBorneDisease

      - test_libraries_Standard:
          context: lawmurray
          requires:
            - test_libbirch

      - test_libraries_Cairo:
          context: lawmurray
          requires:
            - test_libraries_Standard

      - test_libraries_SQLite:
          context: lawmurray
          requires:
            - test_libraries_Standard
    
      - test_examples_LinearGaussian:
          context: lawmurray
          requires:
            - test_libraries_Cairo
            - test_libraries_SQLite

      - test_examples_LinearRegression:
          context: lawmurray
          requires:
            - test_libraries_Cairo
            - test_libraries_SQLite

      - test_examples_MixedGaussian:
          context: lawmurray
          requires:
            - test_libraries_Cairo
            - test_libraries_SQLite

      - test_examples_PoissonGaussian:
          context: lawmurray
          requires:
            - test_libraries_Cairo
            - test_libraries_SQLite

      - test_examples_SIR:
          context: lawmurray
          requires:
            - test_libraries_Cairo
            - test_libraries_SQLite

      - test_examples_MultiObjectTracking:
          context: lawmurray
          requires:
            - test_libraries_Cairo
            - test_libraries_SQLite
      
      - test_examples_VectorBorneDisease:
          context: lawmurray
          requires:
            - test_libraries_Cairo
            - test_libraries_SQLite
