/**
 * @file
 *
 * Standard headers that should be included for all C++ files generated by
 * the compiler.
 */
#pragma once

#include "bi/lib/easy.hpp"
#include "bi/lib/Markable.hpp"
#include "bi/lib/Object.hpp"
#include "bi/lib/Pointer.hpp"
#include "bi/lib/Coroutine.hpp"

#include <utility>
#include <functional>
#include <string>
#include <cstdlib>
#include <cassert>

#include <getopt.h>

namespace bi {
/**
 * Left tilde (`<~`) operator
 */
template<class Left, class Right>
void left_tilde_(Left& left, const Right& right) {
  left = right->simulate_();
}

/**
 * Right tilde (`~>`) operator
 */
template<class Left, class Right>
auto right_tilde_(const Left& left, const Right& right) {
  return right->observe_(left);
}

/**
 * Tilde (`~`) operator
 */
template<class Left, class Right>
auto tilde_(Left& left, const Right& right) {
  assert(left->isUninitialized_());
  if (left->isMissing_()) {
    right_tilde_(left->value_(), right);
  }
  left = right;
}
}
