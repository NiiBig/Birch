/**
 * Event emitted during the execution of a model.
 *
 * ```mermaid
 * classDiagram
 *    Event <|-- SimulateEvent
 *    Event <|-- ObserveEvent
 *    Event <|-- AssumeEvent
 *    Event <|-- FactorEvent
 *    link Event "../Event/"
 *    link SimulateEvent "../SimulateEvent/"
 *    link ObserveEvent "../ObserveEvent/"
 *    link AssumeEvent "../AssumeEvent/"
 *    link FactorEvent "../FactorEvent/"
 * ```
 */
abstract class Event {
  /**
   * Accept an event handler.
   */
  abstract function accept(handler:PlayHandler);
  
  /**
   * Accept an event handler.
   */
  abstract function accept(handler:MoveHandler);

  /**
   * Accept an event handler.
   */
  abstract function accept(record:Record, handler:PlayHandler);

  /**
   * Accept an event handler.
   */
  abstract function accept(record:Record, handler:MoveHandler);

  /**
   * Make a record for the event, in order to enter into a trace.
   *
   * Returns: The record.
   */
  abstract function record() -> Record;
}
